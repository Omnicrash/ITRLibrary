{% extends 'ITRLibraryBundle::layout.html.twig' %}

{% block content %}
    {% set queryData = app.request.query.all() %}
    <h1>
        {{ 'library'|trans }}
        <div class="pull-right">
            <a href="{{ path('post_new') }}" class="btn btn-primary">{{ 'add_post'|trans }}</a>
        </div>
    </h1>

    <div class="row margin-20">
        <div class="col-lg-5">
            {{ 'sort_by'|trans }}:
            <div class="btn-group sortable" role="group">
                <span class="btn btn-link{% if pagination.isSorted('p.title') %} active{% endif %}"> {{ knp_pagination_sortable(pagination, 'title'|trans, 'p.title') }}</span>
                <span class="btn btn-link{% if pagination.isSorted('p.writtenAt') %} active{% endif %}"> {{ knp_pagination_sortable(pagination, 'writtenBy'|trans, 'p.writtenAt') }}</span>
                <span class="btn btn-link{% if pagination.isSorted('p.createdAt') %} active{% endif %}"> {{ knp_pagination_sortable(pagination, 'createdAt'|trans, 'p.createdAt') }}</span>
                <span class="btn btn-link{% if pagination.isSorted('p.votes') %} active{% endif %}"> {{ knp_pagination_sortable(pagination, 'votes'|trans, 'p.votes') }}</span>
            </div>
        </div><!-- /.col-lg-6 -->
        <div class="col-lg-4">
            {{ 'number_of_rows'|trans }}:
            <div class="btn-group sortable" role="group">
                <select name="limit" id="limit-selection" class="form-control" >
                    {% for limit in [10, 20, 50, 100] %}
                        <option value="{{ limit }}" {% if app.request.query.get('limit') == limit %}selected{% endif %}>{{ limit }}</option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="col-lg-3">
            <form method="GET">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="{{ 'search_for'|trans }}" name="value" value="{{ app.request.query.get('value') }}">
                    <span class="input-group-btn">
                        <button class="btn btn-primary" type="submit">{{ 'search'|trans }}</button>
                    </span>
                </div><!-- /input-group -->
            </form>
        </div>
    </div><!-- /.row -->

    <div class="row">
        <div class="col-lg-12">
            <table class="table table-hover table-reddit">
                {% for post in pagination %}
                    {% set queryData = queryData|merge({'id': post.id}) %}
                    <tr {% if loop.index is odd %}class="color"{% endif %}>
                        <td class="text-center voter-wrapper">
                            <a class="voter {% if app.request.cookies.get(post.getHash()) == 1 %}active{% endif %}" {% if app.request.cookies.get(post.getHash()) != 1 %}href="{{ path('post_upvote', queryData) }}"{% endif %}>
                                <span class="glyphicon glyphicon-arrow-up"></span>
                            </a>
                            <div class="score">{{ post.votes }}</div>
                            <a class="voter {% if app.request.cookies.get(post.getHash()) == -1 %}active{% endif %}" {% if app.request.cookies.get(post.getHash()) != -1 %}href="{{ path('post_downvote', queryData) }}"{% endif %}>
                                <span class="glyphicon glyphicon-arrow-down"></span>
                            </a>
                        </td>
                        <td>
                            <a href="{{ post.url }}" target="_blank"><h3>{{ post.title }} {% if post.writtenAt %}({{ post.writtenAt | date('d-m-Y') }}){% endif %}</h3></a>
                            <small>
                                {{ 'added_on'|trans }} {{ post.createdAt | date('d-m-Y') }}
                                {% for tag in post.tags %}
                                    {% if loop.first %} - {% endif %}
                                    <a href="{{ path('post_index', {'value': tag.name}) }}" class="label label-primary">{{ tag }}</a>
                                {% endfor %}
                            </small>
                        </td>
                        <td class="actions text-right">
                            <a href="{{ path('post_edit', {'id': post.id}) }}"><small class="glyphicon glyphicon-pencil"></small></a>
                            <a data-url="{{ path('post_delete', {'id': post.id}) }}" class="js-modal-toggle" data-toggle="modal" data-target="#confirmDelete" data-title="{{ 'delete_title'|trans }}" data-message="{{ 'delete_message'|trans }}">
                                <small class="glyphicon glyphicon-trash"></small>
                            </a>
                        </td>
                    </tr>
                {% endfor %}
            </table>
        </div>
    </div>

    <div class="navigation">
        {{ knp_pagination_render(pagination) }}
    </div>

    {% if not app.request.cookies.has('subscribed') %}

    <div class="row margin-20">
        <div class="col-lg-offset-6 col-lg-6">
        {{ form_start(subscribeForm, {'action': path('subscriber_new')}) }}
            <div class="input-group">
                {{ form_widget(subscribeForm.email, {'attr': {'placeholder': 'subscribe_message'|trans}}) }}
                <span class="input-group-btn">
                    <input class="btn btn-primary" type="submit" value="{{ 'subscribe'|trans }}" />
                </span>
            </div>
            {{ form_rest(subscribeForm) }}
        {{ form_end(subscribeForm) }}
        </div>
    </div>

    {% endif %}
{% endblock %}

{% block javascript_page_specific %}
    <script type="text/javascript">
        $('#limit-selection').on('change', function(){
            var params = getQueryParams(document.location.search);
            params.limit = $(this).val();
            var search = "";
            for (var key in params) {
                if (params.hasOwnProperty(key)) {
                    if (0 !== search.length) {
                        search += "&";
                    }
                    search += key + "=" + params[key];
                }
            }
            document.location.search = search;
        });

        function getQueryParams(qs) {
            qs = qs.split('+').join(' ');

            var params = {},
                    tokens,
                    re = /[?&]?([^=]+)=([^&]*)/g;

            while (tokens = re.exec(qs)) {
                params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);
            }

            return params;
        }
    </script>
{% endblock %}